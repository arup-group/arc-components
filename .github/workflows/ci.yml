on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v14
      - id: set-matrix
        name: set matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json .#githubActions.matrix)"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  flake-checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: determinatesystems/flake-checker-action@v9

  formatter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix fmt -- --check .

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v12
        with:
          name: arup-group-arc-components
          signingKey: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop --command npx nx run-many --target lint,test

  build:
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v12
        with:
          name: arup-group-arc-components
          signingKey: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build -L '.#${{ matrix.attr }}'
