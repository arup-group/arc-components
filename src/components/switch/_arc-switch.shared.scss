/**
 * ArcSwitch shared component styles.
 */
@use '../../styles/preferences' as preferences;
@use '../../styles/control.styles' as control;

/* selector */
$selector: #{preferences.$prefix}switch;

/* host styles */
@mixin host-styles {
  --height: var(--arc-font-size-x-large);
  --width: calc(var(--height) * 2);
  --thumb-size: calc(var(--arc-font-size-x-large) - 4px);
}

/* component styles */
@mixin component-styles {
  @include control.styles(&);

  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  cursor: pointer;
  gap: var(--arc-spacing-x-small);

  &--base {
    flex: 0 0 auto;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: var(--width);
    height: var(--height);
    background-color: rgb(var(--arc-grey-060));
    border-radius: var(--height);
  }

  &--control {
    position: absolute;
    transform: translateX(calc((var(--width) - var(--height)) / -2));
  }

  &--thumb {
    width: var(--thumb-size);
    height: var(--thumb-size);
    background-color: rgb(var(--arc-grey-000));
    border-radius: 50%;
  }

  /* hover and focus-visible */
  &:has(input:hover:not(input:disabled)) &--control, &:has(input:focus-visible:not(input:disabled)) &--control {
    background-color: rgba(var(--arc-font-color), 10%);
  }

  /* active */
  &:has(input:active:not(input:disabled)) &--control {
    background-color: rgba(var(--arc-font-color), 30%);
  }

  /* disabled */
  &:has(input:disabled) {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* checked */
  &:has(input:checked) &--base {
    background-color: rgb(var(--arc-color-info));
  }

  &:has(input:checked) &--control {
    transform: translateX(calc((var(--width) - var(--height)) / 2));
  }
}
